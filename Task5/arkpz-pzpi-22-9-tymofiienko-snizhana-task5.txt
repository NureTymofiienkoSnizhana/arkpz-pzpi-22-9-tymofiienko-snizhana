1
Міністерство освіти і науки України
Харківський національний університет радіоелектроніки
Кафедра програмної інженерії
Звіт
З дисципліни «Аналіз та рефакторинг коду»
З лабораторної роботи №5
Виконала:
ст. гр. ПЗПІ-22-9 Тимофієнко С. О.
Перевірив: Дашенков Д. С.
Харків 2024
2
5 РОЗГОРТАННЯ ПРОГРАМНОЇ СИСТЕМИ ТА
ДЕМОНСТРАЦІЯ ЇЇ РОБОТИ
Мета: Розгорнути програмну систему та продемонструвати її роботу.
Хід роботи:
1) Для розгортання моєї програмної системи я обрала ngrok.
Запускаємо ngrok на порту 8080 за допомогою такого рядку:
ngrok http --scheme=http 8080
Отримуємо ось такий результат:
Рисунок 1 – Результат запуску ngrok
Тепер, щоб зв’язати IoT пристрій з серверною частиною використаємо
посилання, яке створив ngrok і додамо його в змінну в коді для пристрою:
const char* serverUrl = "http://fa06-82-144-214-50.ngrokfree.app/api/pet-and-health/v1/health-data/device";
Тепер використаємо під’єднання до WiFi та спробуємо відправити дані
з пристрою на сервер:
Рисунок 2 – Підключення до WiFi
Рисунок 3 – Створення HTTP запиту і надсилання його на сервер
Бачимо, що в консоль вивелася відповідь сервера. Перевіримо чи
завантажилися дані у базу даних:
3
Рисунок 4 – Вигляд запису в базі даних
2) Опис розроблених функцій з розділу Major Features з документу V&S
першої лабораторної роботи:
MF-1: Авторизація та реєстрація користувачів.
Шляхи для запитів:
GET api/pet-and-health/v1/login/auth
POST /api/pet-and-health/v1/login/registration
Тіло запиту:
auth:
{
 "email": "tymofiienko@gmail.com",
 "password": "1111"
}
registration:
{
 "full_name": "Емілія Кларк",
 "email": "klark@gmail.com",
 "password": "5555"
}
Результат виконання:
Рисунок 1 – Результат виконання авторизації
Рисунок 2 – Результат виконання реєстрації
4
MF-2: Автоматичний моніторинг активності, сну, температури тварини
за допомогою IoT-датчиків.
Схема пристрою:
Рисунок 3 – Схема IoT-пристрою
Зчитування і відправка даних на сервер:
Рисунок 4 – Зчитування даних з датчиків
Рисунок 5 – Формування запиту і відправка даних на сервер
MF-3: Push-сповіщення для власників про зміни у стані здоров'я або
поведінці тварини.
Сповіщення створюються при отриманні аномальних даних з IoTпристрою. Коли на сервер приходить аномальна температура чи активність,
5
генерується сповіщення і відправляється власнику тварини, адміністратору
готелю та ветеринару, а також створюється новий запис у базі днаих:
Рисунок 6 – Запис із сповіщенням у базі даних
MF-6: Можливість створення звітів на основі зібраних даних для
ветеринарів з метою діагностики та рекомендацій.
Шлях для запиту:
GET /api/pet-and-health/v1/vet/pet-report/pdf
Тіло запиту:
{
 "_id": "6746db1e7a2137a0f967604d",
 "start_time": 1734589590,
 "end_time": 1734762390
}
Результат виконання:
6
Рисунок 7 – Генерація звіту
MF-7: Історія даних для перегляду попередньої активності та стану
тварини, доступна адміністраторам та ветеринарам.
Шлях для запиту:
Тіло запиту:
Результат виконання:
MF-9: Можливість додавання нової тварини у застосунок та
підключення її комірця.
Функція для додавання тварини:
Шлях для запиту:
GET /api/pet-and-health/v1/user/pet-info
Тіло запиту:
{
 "_id":"6746db1e7a2137a0f967604d"
}
Результат виконання:
{
 "ID": "6746db1e7a2137a0f967604d",
 "Name": "Кейсі",
 "Species": "dog",
 "Breed": "Шпіц",
 "Age": 3,
 "OwnerID": "67504cd6899fdc57a0517e80",
 "Health": [
 {
 "ID": "676982ce110bc4b2bfe8bf4e",
 "PetID": "6746db1e7a2137a0f967604d",
 "Activity": 9.81,
 "SleepHours": 0,
 "Temperature": 38.9,
 "Time": {
 "T": 1734968014,
 "I": 0
 }
 },
 {
 "ID": "6769855c110bc4b2bfe8bf4f",
 "PetID": "6746db1e7a2137a0f967604d",
 "Activity": 10.3,
 "SleepHours": 0,
 "Temperature": 38.9,
 "Time": {
 "T": 1734968668,
7
 "I": 0
 }
 },
 {
 "ID": "6769859c110bc4b2bfe8bf50",
 "PetID": "6746db1e7a2137a0f967604d",
 "Activity": 10.3,
 "SleepHours": 0,
 "Temperature": 36.8,
 "Time": {
 "T": 1734968732,
 "I": 0
 }
 }
 ]
}